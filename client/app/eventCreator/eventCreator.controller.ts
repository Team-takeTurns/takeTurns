'use strict';

(function() {

    class EventCreatorController {

        constructor($http, $scope, socket, $rootScope, $cookies) {
            this.$http = $http;
            this.awesomeCalendars = [];
            this.calendar;
            this.userIDtemp;
            this.user;
            this.eventID;
            this.eventTitle;
            this.eventHost;
            this.eventDate;
            this.eventStartTime;
            this.eventEndTime;
            this.eventInfo;
            this.eventReminder;
            this.eventGuestList = [];



            //get calendar id from user ----------------------------
            paramSerializer: '$httpParamSerializerJQLike';

            //send request to BE to get user and then call method to get calendar------------------------------------
          if ($cookies.get("userId")) {
                $http.get('/api/users/' + $cookies.get("userId")).then(response => {
                this.user = response.data;
                this.getCalendar();
                socket.syncUpdates('calendar', this.calendar);
            });
            } else {
                console.log("ERROR - userID is undefined. please use the link that was provided to you when the calendar was created.");
            }
           

            //autogenerated code --------------------------------------
            $scope.$on('$destroy', function() {
                socket.unsyncUpdates('calendar');
            });
        }

        //send request to BE to get calendar details -------------------------------
        getCalendar() {
            this.$http.get('/api/calendars/' + this.user.calID).then(response => {
                this.calendar = response.data;
            });
        }


        //send request to create new event - code is not working yet ------------------------------------------
        addEvent() {

                var startTime = this.formatTime("" +this.eventStartTime);
                var endTime = this.formatTime("" + this.eventEndTime);
                
                this.$http.put('/api/calendars/addEvent/' + this.calendar._id, {title:this.eventTitle, host: this.eventHost, date: this.eventDate,
                startTime:startTime, endTime:endTime, info: this.eventInfo, reminder:this.eventReminder});

                this.eventID = '';
                this.eventTitle = '';
                this.eventHost = '';
                this.eventDate = '';
                this.eventStartTime = '';
                this.eventEndTime = '';
                this.eventInfo = '';
                this.eventReminder = '';
                this.eventGuestList = [];
        }
        
        // Add guest to a list;
        private assignGuestList(){
            
            /* Implement later */
            // Push the data the userEvents array
            // this.userEvent.push({title:this.eventTitle, host: this.eventHost, date: this.eventDate,
            //     startTime:this.eventStartTime, info: this.eventInfo, reminder:this.eventReminder, guestList:this.eventGuestList});
        }
        
        // Format the time
        private formatTime(timeValue){
            var subTime = timeValue.substring(16, 24) + "-05:00";
            return subTime;
        }
  

        //send request to delete an event --- temporarily here for testing etc...
        deleteEvent(event) {
            this.eventID = event._id;
            this.$http.patch('/api/calendars/' + this.calendar._id + "/deleteEvent/" + this.eventID).then(response => {
                this.calendar = response.data;
            });
        }

    }

    angular.module('takeTurnsApp')
        .controller('EventCreatorController', EventCreatorController);
})();
